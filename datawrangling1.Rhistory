refine <- read.csv("~/Downloads/refine.csv", stringsAsFactors=FALSE)
View(refine)
refine <- refine %>% mutate_each(funs(replace(., grepl('ill', .) | grepl('hlip', .) , 'philips')), company)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
refine <- refine %>% mutate_each(funs(replace(., grepl('ill', .) | grepl('hlip', .) , 'philips')), company)
refine <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('akz0', .) , 'philips')), company)
refineOriginal <- read.csv("~/Downloads/refineOriginal.csv", stringsAsFactors=FALSE)
View(refineOriginal)
refine <- read.csv("~/Downloads/refine.csv", stringsAsFactors=FALSE)
View(refine)s
refineOriginal2 <- refineOriginal
View(refineOriginal2)
refine <- refine %>% mutate_each(funs(replace(., grepl('ill', .) | grepl('hlip', .) , 'philips')), company)
View(refineOriginal2)
refineOriginal2 <- refine %>% mutate_each(funs(replace(., grepl('ill', .) | grepl('hlip', .) , 'philips')), company)
refineOriginal2 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0') | grepl('ak zo'), 'akzo')), company)
refineOriginal2 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0') | grepl('ak zo'), 'akzo')), company)
refineOriginal2 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0') | grepl('ak zo'), 'akzo')), company)
refineOriginal2 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0', .) | grepl('ak zo', .), 'akzo')), company)
refineOriginal2 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0', .) | grepl('ak zo', .) | grep('Ak', .), 'akzo')), company)
refineOriginal2 <- refine %>% mutate_each(funs(replace(., grepl('ill', .) | grepl('hlip', .) , 'philips')), company)
refineOriginal3 <- refineOriginal
refineOriginal4 <- refineOriginal
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('ill', .) | grepl('hlip', .) , 'philips')), company)
View(refineOriginal3)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0', .) | grepl('ak zo', .) | grepl('Ak', .), 'akzo')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('Van', .) | grepl('Hou', .), 'van houten')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('Uni', .) | grepl('uni', .), 'unilever')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0', .) | grepl('ak', .) | grepl('Ak', .), 'akzo')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('U', .) | grepl('uni', .), 'unilever')), company)
View(refineOriginal3)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0', .) | grepl('ak ', .) | grepl('Ak', .), 'akzo')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('U', .) | grepl('uni', .) | grepl('Unilever', .), 'unilever')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('Van', .) | grepl('Houten', .) | grepl(' Houten', .), 'van houten')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('AKZO', .) | grepl('ackz', .) | grepl('z0', .) | grepl('ak ', .) | grepl('Akzo', .), 'akzo')), company)
refineOriginal3 <- refine %>% mutate_each(funs(replace(., grepl('Van', .) | grepl('Houten', .) | grepl(' Houten', .) | grepl('Van Houten'), 'van houten')), company)
View(refineOriginal3)
save.image("~/DataWrangling1/datawranglin1.RData")
savehistory("~/DataWrangling1/datawrangling1.Rhistory")
str(refineOriginal6a)
names(refineOriginal6a)[names(refineOriginal6a) == 'Product.code...number.a'] <- 'product_code'
View(refineOriginal6a)
View(refineOriginal6a)
View(refineOriginal6a)
names(refineOriginal6a)[names(refineOriginal6a) == 'Product.code...number.a'] <- 'product_code'
View(refineOriginal6a)
load("~/DataWrangling1/datawranglin1.RData")
names(refineOriginal6a)[names(refineOriginal6a) == 'Product.code...number.a'] <- 'product_code'
View(refineOriginal6a)
View(refineOriginal6a)
View(refineOriginal6a)
colnames(trSamp)[3] <- "product_code"
colnames(refineOriginal6a)[3] <- "product_code"
str(refineOriginal6a)
save.image("~/DataWrangling1/datawranglin1.RData")
savehistory("~/DataWrangling1/datawrangling1.Rhistory")
View(refineOriginal5a)
View(refineOriginal4)
View(refineOriginal6a)
str(refineOriginal4)
refineOriginal4 <- transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '|', fixed=TRUE)), stringsAsFactors=T)
View(refineOriginal4)
refineOriginal4 <- transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=T)
View(refineOriginal4)
refineOriginal4 <- transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
View(refineOriginal4)
refineOriginal8 <- transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
View(refineOriginal8)
refineOriginal8 <- transform(refineOriginal4$Product.code...number, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
View(refineOriginal4)
refineOriginal4 <- transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
refineOriginal4 <- transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
View(refineOriginal4)
refineOriginal4b <- transform(refineOriginal4, test=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
View(refineOriginal4b)
refineOriginal4b <- transform(refineOriginal4, Product.Code...number=do.call(rbind, strsplit(refineOriginal4$Product.code...number, '-', fixed=TRUE)), stringsAsFactors=F)
install.packages("car")
library("car", lib.loc="~/Library/R/3.3/library")
library("plyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
refineOriginal4$productcategory <- mapvalues(refineOriginal4$test, from = c("p", "x", "q", "v"), to = c("Smartphone", "Laptop", "Tablet", "TV"))
refineOriginal4b$productcategory <- mapvalues(refineOriginal4b$test, from = c("p", "x", "q", "v"), to = c("Smartphone", "Laptop", "Tablet", "TV"))
View(refineOriginal4)
View(refineOriginal4b)
refineOriginal4$full_address <- paste(refineOriginal4b$address, refineOriginal4b$city, refineOriginal$country, sep=',')
refineOriginal4b$full_address <- paste(refineOriginal4b$address, refineOriginal4b$city, refineOriginal$country, sep=',')
View(refineOriginal6a)
View(refineOriginal4b)
for(level in unique(refineOriginal4b$company)){
example[paste("company", level, sep = "_")] <- ifelse(refineOriginal4b$company == level, 1, 0)
}
for(level in unique(refineOriginal6a$company)){
example[paste("company", level, sep = "_")] <- ifelse(refineOriginal6a$company == level, 1, 0)
}
for(level in unique(refineOriginal6a$company)){
example[paste("company", level, sep = "_")] <- ifelse(refineOriginal6a$company == level, 1, 0)
}
str(refineOriginal6a)
refineOriginal6a$company <- as.factor(refineOriginal6a$company)
str(refineOriginal6a)
for(level in unique(refineOriginal6a$company)){
example[paste("company", level, sep = "_")] <- ifelse(refineOriginal6a$company == level, 1, 0)
}
for(level in unique(refineOriginal6a$company)){
example[paste("company", level, sep = "_")] <- ifelse(refineOriginal6a$company == level, 1, 0)
}
for(level in unique(refineOriginal6a$company)){
refineOriginal6a[paste("company", level, sep = "_")] <- ifelse(refineOriginal6a$company == level, 1, 0)
}
View(refineOriginal6a)
View(refineOriginal6a)
View(refineOriginal6a)
for(level in unique(refineOriginal4b$company)){
refineOriginal6a[paste("product", level, sep = "_")] <- ifelse(refineOriginal6a$company == level, 1, 0)
}
View(refineOriginal6a)
for(level in unique(refineOriginal4b$productcategory)){
refineOriginal6a[paste("product", level, sep = "_")] <- ifelse(refineOriginal4b$productcategory == level, 1, 0)
}
View(refineOriginal6a)
write.csv(refineOriginal6a, "refineOriginal6a.csv")
write.csv(refineOriginal6a, "refineOriginal6a.csv")
write.csv(refineOriginal6a, "refineoriginal6a.csv")
refineOriginal6c <- refineOriginal6a
View(refineOriginal6c)
str(refineOriginal6a)
str(refineOriginal6a)
str(refineOriginal6ac)
str(refineOriginal6c)
write.csv(refineOriginal6c,"refineOriginal6c.csv")
?write.csv
View(refineOriginal4b)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("tidyr")
library("tidyr", lib.loc="~/Library/R/3.3/library")
View(refineOriginal6a)
View(refineOriginal6c)
View(refineOriginal6a)
refineOriginal6a %>% gather(DateType, StartDate, -id) %>% select(-DateType) %>% arrange(id) %>% group_by(id) %>% mutate(EndDate = lead(StartDatsdafase))
View(refineOriginal6c)
refineOriginal6a$product_code.b <- as.character(refineOriginal6a$product_code.b)
refineOriginal6a$product_code.b <- as.character(refineOriginal6a$product_code.b)
refineOriginal6a$product_code.b <- as.character(refineOriginal6a$product_code.b)
save.image("~/DataWrangling1/datawranglin1.RData")
savehistory("~/DataWrangling1/datawrangling1.Rhistory")
load("~/DataWrangling1/datawranglin1.RData")
View(refineOriginal6a)
write.table(refineOriginal6a, "r6a.csv")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
str(refineOriginal6a)
refineOriginal6aflatten <- refineOriginal6a
View(refineOriginal6aflatten)
flatten(refineOriginal6aflatten, recursive = TRUE)
refineOriginal6aflatten <- flatten(refineOriginal6aflatten, recursive = TRUE)
str(refineOriginal6aflatten)
save.image("~/DataWrangling1/datawranglin1.RData")
savehistory("~/DataWrangling1/datawrangling1.Rhistory")
write.csv(refineOriginal6aflatten, "refineOriginal6aflatte.csv")
str(refineOriginal4)
write.csv(refineOriginal4,"refineOriginal4.csv")
refineOriginal6aflatten <- read.csv("~/DataWrangling1/refineOriginal6aflatten.csv", stringsAsFactors=FALSE)
View(refineOriginal6aflatten)
install.packages("travis")
save.image("~/DataWrangling1/datawranglin1.RData")
savehistory("~/DataWrangling1/datawrangling1.Rhistory")
